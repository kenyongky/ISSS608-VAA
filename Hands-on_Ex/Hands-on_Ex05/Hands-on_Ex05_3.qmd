---
title: "Hands-on Exercise 5 (Part 3)"
author: "Kenneth Yong"
---

# Heatmap for Visualising and Analysing Multivariate Data - Getting Started

## Installing and Launching R Packages

```{r}
pacman::p_load(seriation, dendextend, heatmaply, tidyverse)
```

# Importing and Preparing The Data Set

## Importing the data set

```{r}
wh <- read_csv("data/WHData-2018.csv")
```

## Preparing the data

```{r}
row.names(wh) <- wh$Country
```

## Transforming the data frame into a matrix

```{r}
wh1 <- dplyr::select(wh, c(3, 7:12))
wh_matrix <- data.matrix(wh)
```

# Static Heatmap

## heatmap() of R Stats

```{r}
wh_heatmap <- heatmap(wh_matrix,
                      Rowv=NA, Colv=NA)
```

```{r}
wh_heatmap <- heatmap(wh_matrix)
```

```{r}
wh_heatmap <- heatmap(wh_matrix,
                      scale="column",
                      cexRow = 0.6, 
                      cexCol = 0.8,
                      margins = c(10, 4))
```

# Creating Interactive Heatmap

```{r}
heatmaply(mtcars)
```

## Working with heatmaply

```{r}
heatmaply(wh_matrix[, -c(1, 2, 4, 5)])
```

## Data trasformation

### Scaling method

```{r}
heatmaply(wh_matrix[, -c(1, 2, 4, 5)],
          scale = "column")
```

### Normalising method

```{r}
heatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))
```

### Percentising method

```{r}
heatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))
```

## Clustering algorithm

**A clustering model can be calibrated either manually or statistically.**

## Manual approach

```{r}
heatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),
          dist_method = "euclidean",
          hclust_method = "ward.D")
```

## Statistical approach

```{r}
wh_d <- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = "euclidean")
dend_expend(wh_d)[[3]]
```

```{r}
wh_clust <- hclust(wh_d, method = "average")
num_k <- find_k(wh_clust)
plot(num_k)
```

```{r}
heatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),
          dist_method = "euclidean",
          hclust_method = "average",
          k_row = 3)
```

## Seriation

```{r}
heatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),
          seriate = "OLO")
```

```{r}
heatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),
          seriate = "GW")
```

```{r}
heatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),
          seriate = "mean")
```

```{r}
heatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),
          seriate = "none")
```

## Working with colour palettes

```{r}
heatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),
          seriate = "none",
          colors = Blues)
```

## The finishing touch

```{r}
heatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),
          Colv=NA,
          seriate = "none",
          colors = Blues,
          k_row = 5,
          margins = c(NA,200,60,NA),
          fontsize_row = 4,
          fontsize_col = 5,
          main="World Happiness Score and Variables by Country, 2018 \nDataTransformation using Normalise Method",
          xlab = "World Happiness Indicators",
          ylab = "World Countries"
          )
```
